<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed'); class Auth {	protected $CI;		function __construct () {		$this->CI =& get_instance();	}		// check login status (do not force login, though)	function is_logged_in() {		$is_logged_in = $this->CI->session->userdata('is_logged_in');		if (!isset($is_logged_in) || $is_logged_in != TRUE ) {			return FALSE; // not logged in					}				return TRUE; // logged in	}		function require_login($warn=TRUE) {			// for use in offline mode only - disables login system!		$this->CI->session->set_userdata(array('facebook_uid' => 504850777, 'is_logged_in' => TRUE));		return TRUE;			// if not logged in...		if (!$this->is_logged_in()) {					// redirect to login page if not already there!			if ($this->CI->uri->segment(1) != 'stspauth') {				if ($warn) $this->CI->session->set_flashdata('notice', 'You need to log in first.');			}				// if warn is TRUE, flash message to user.			// this avoids warning user when they click login!			if ($warn && ($this->CI->uri->segment(1) != 'stspauth')) $this->CI->session->set_flashdata('notice', 'You need to log in first.');					// using current uri_string to enable redirection back here after login			// (unless we're on the login page already!)			if ($this->CI->uri->segment(1) == 'stspauth') {				redirect(base_url(), 'location');			} else {				redirect(site_url('stspauth?redirect='.$this->CI->uri->uri_string()), 'location');			}							// redirect user to login page 			redirect(site_url('stspauth'.$uri_str), 'location');			//redirect(site_url(), 'location');		}				// Do nothing if already logged in!		}		function logout() { 		$this->CI->session->sess_destroy();		//$this->CI->facebook->destroySession();		session_destroy();				//$this->CI->load->model('fizzlebizzle');		//$result = $this->CI->fizzlebizzle->get_logout_url();				//if ($result['is_true']) {			//redirect($result['logout_url'], 'location');					//} else {						$this->CI->session->set_flashdata('info', 'You have been logged out.');			redirect(base_url(), 'location');		//}	}}