<?php if (!defined('BASEPATH')) exit('No direct script access allowed');class Purchases extends CI_Controller {	private $data = array();	// Constructor	function __construct() {		parent::__construct();				// Force login		$this->auth->require_login();				// Current Page		$this->data['slug'] = 'purchases';				// Get user details		$this->load->model('users_model');		$this->data['user'] = $this->users_model->get_user_by_facebook_id($this->session->userdata('facebook_uid'));						// Check (and update) facebook access_token		// not needed on this page (only on settings page?)		// $this->load->model('fizzlebizzle');		// $result = $this->fizzlebizzle->get_access_token();		// if ($result['is_true']) {			// $this->session->set_userdata(array('access_token' => $result['access_token']));		// } else {			// $this->session->set_userdata(array('access_token' => FALSE));		// }						$this->load->model('purchases_model');				$this->output->enable_profiler(TRUE);	}	// Index: All Purchases	function index() {					//print_r($user);			// get all purchases		$this->data['purchases'] = $this->purchases_model->get_purchases();						// Send to view		$this->load->view('template',$this->data);	}		function add() {				$this->load->helper('form');		// form validation rules defined in config/form_validation.php		if ($this->form_validation->run() == TRUE) {			$this->session->set_flashdata('success', 'Purchase added. View it <del>here</del>.');			redirect('purchases');		}				// only reaches here if form failed validation						// csrf protection?								// Send to view		$this->data['slug'] = 'add_purchase';		$this->data['view'] = 'purchases/add_purchase';		$this->load->view('template',$this->data);	}		function view($id) {							// Ensure a valid purchase id was given		if (!is_numeric($id)) {			$this->session->set_flashdata('error', 'Invalid purchase ID was specified when viewing details.');			redirect('purchases');		}				// Purchase details		$this->data['purchase'] = $this->purchases_model->get_purchase($id);				// All activity/comments/edits etc		// ...				// Send to view		$this->data['title'] = 'View Purchase';		$this->data['view'] = 'purchases/view_purchase';		$this->load->view('template',$this->data);		}		function edit($id) {				// Ensure a valid purchase id was given		if (!is_numeric($id)) {			$this->session->set_flashdata('error', 'Invalid purchase ID was specified for editing.');			redirect('purchases');		}				// Prefill form? Form helper? Form validator?				// Purchase details		//$data['purchase'] = $this->purchases_model->get_purchase($id);				// All activity/comments/edits etc		// ...				// Send to view		$this->data['title'] = 'Edit Purchase';		$this->data['view'] = 'purchases/edit_purchase';		$this->load->view('template',$this->data);		}		function comment($purchase_id = 0) {				if ($purchase_id == 0) exit('no purchase id provided to comment on');				// Send to view		$this->data['title'] = 'Comment on Purchase';		$this->load->view('template',$this->data);		}}// EOF